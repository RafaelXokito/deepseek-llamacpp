version: '3.8'

services:

  ai-sandbox-neo4j:
    container_name: ai-sandbox-neo4j-server
    image: neo4j:5.19.0-community-bullseye
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_whitelist=apoc.*,gds.*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_shell_enabled=true
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_AUTH=neo4j/${AI_SANDBOX_KNOWLEDGE_GRAPH__PASSWORD}
    volumes:
      - ./neo4j/config/neo4j.conf:/conf/neo4j.conf
      - ./neo4j/volumes/data:/data
      - ./neo4j/volumes/logs:/logs
      - ./neo4j/volumes/import:/import
      - ./neo4j/volumes/plugins:/plugins
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    restart: on-failure

  ai-sandbox-milvus-etcd:
    container_name: ai-sandbox-milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ./milvus/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: on-failure

  ai-sandbox-milvus-minio:
    container_name: ai-sandbox-milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ./milvus/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: on-failure

  ai-sandbox-milvus-standalone:
    container_name: ai-sandbox-milvus-standalone
    image: milvusdb/milvus:v2.4.0
    command: [ "milvus", "run", "standalone" ]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: ai-sandbox-milvus-etcd:2379
      MINIO_ADDRESS: ai-sandbox-milvus-minio:9000
    volumes:
      - ./milvus/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    restart: on-failure
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "ai-sandbox-milvus-etcd"
      - "ai-sandbox-milvus-minio"

  ai-sandbox-attu:
    container_name: ai-sandbox-attu
    image: zilliz/attu:v2.4.0
    environment:
      MILVUS_URL: ai-sandbox-milvus-standalone:19530
    restart: on-failure
    ports:
      - "8000:3000"

  ai-sandbox-milvus-backup:
    container_name: ai-sandbox-milvus-backup
    image: milvusdb/milvus-backup
    restart: on-failure
    volumes:
      - ./milvus/backup-config.yaml:/app/configs/backup.yaml
    healthcheck:
      test: [ "CMD", "./milvus-backup", "check" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "8080:8080"
    depends_on:
      - "ai-sandbox-milvus-standalone"
      - "ai-sandbox-milvus-minio"

networks:
  default:
    name: "ai-sandbox"
    driver: bridge